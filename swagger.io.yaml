openapi: 3.0.0
info:
  title: Smart Tourism App API (Syria)
  description: API documentation for the Smart Tourism App backend. Provides access to tourist sites, products, hotel bookings, and user-generated content.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api # Base URL for API endpoints (matches your successful login test)
    description: Development Server

# Define Security Schemes (for authentication)
components:
  securitySchemes:
    sanctumAuth:
      type: http
      scheme: bearer
      bearerFormat: token # Or JWT, depending on your preference. 'token' is simple and generic.
      description: |
        Authenticate using a Sanctum API token.
        Obtain the token from the /login endpoint.
        Include the token in the Authorization header: `Bearer <your_token>`

  # Define reusable Schemas (Data Models) for requests and responses
  schemas:

    # --- Authentication & User Schemas ---
    LoginRequest:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: User's username or email address.
          example: admin@app.com # Example using email
        password:
          type: string
          format: password
          description: User's password.
          example: password
        device_name:
          type: string
          nullable: true # Allow null as per AuthController
          description: Name of the device making the request (e.g., 'Mobile App').
          example: FlutterDevice

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
        - password_confirmation
        - first_name # Assuming required for profile creation
        - last_name # Assuming required for profile creation
      properties:
        username:
          type: string
          maxLength: 100
          description: Unique username for the user.
          example: newuser123
        email:
          type: string
          format: email
          maxLength: 100
          description: Unique email address for the user.
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8
          description: User's password (min 8 characters).
          example: securepassword123
        password_confirmation:
          type: string
          format: password
          minLength: 8
          description: Password confirmation (must match password).
          example: securepassword123
        user_type:
          type: string
          nullable: true
          enum:
            - Tourist
            - Vendor
            - HotelBookingManager
            - ArticleWriter
            - Employee
            - Admin
          default: Tourist
          description: Type of user (defaults to Tourist if not provided).
          example: Tourist
        first_name: # Included as per UserProfile creation in AuthController
          type: string
          maxLength: 100
          description: User's first name (for profile).
          example: أحمد
        last_name: # Included as per UserProfile creation in AuthController
          type: string
          maxLength: 100
          description: User's last name (for profile).
          example: علي
        father_name:
          type: string
          maxLength: 100
          nullable: true
          description: User's father's name (optional).
          example: محمد
        mother_name:
          type: string
          maxLength: 100
          nullable: true
          description: User's mother's name (optional).
          example: فاطمة
        device_name:
          type: string
          nullable: true
          description: Name of the device making the request.
          example: FlutterPhone

    User:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the user.
          example: 1 # Example from Seeder
        username:
          type: string
          example: admin # Example from Seeder
        email:
          type: string
          format: email
          example: admin@app.com # Example from Seeder
        user_type:
          type: string
          enum:
            - Tourist
            - Vendor
            - HotelBookingManager
            - ArticleWriter
            - Employee
            - Admin
          example: Admin # Example from Seeder
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:18:03.000000Z" # Example from your response
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:18:03.000000Z" # Example from your response
        profile:
          $ref: '#/components/schemas/UserProfile' # Reference the UserProfile schema
          nullable: true # While the example will not be null, the schema allows it as per DB
          description: User's profile details. Included when profile relationship is loaded.

    UserProfile:
      type: object
      properties:
        # Note: user_id is FK, typically not included in resource unless needed
        # user_id:
        #   type: integer
        #   example: 1
        first_name:
          type: string
          example: محمد # Example, customize
        last_name:
          type: string
          example: العلي # Example, customize
        father_name:
          type: string
          nullable: true
          example: أحمد # Example, customize (not null in example)
        mother_name:
          type: string
          nullable: true
          example: رنا # Example, customize (not null in example)
        passport_image_url:
          type: string
          nullable: true
          example: null # Example showing null is possible
        bio:
          type: string
          nullable: true
          example: مهتم بالسياحة والمغامرات # Example, customize
        profile_picture_url:
          type: string
          nullable: true
          example: /storage/profiles/default.jpg # Example URL
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:20:00.000000Z"

    AuthSuccessResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User' # Reference User schema
        token:
          type: string
          description: Sanctum API token.
          example: "2|aWAjhLkUgC8TfDKbwBTCFoYBjpELPoYplwwnljCX6ae2b5bc" # Example token from your response

    LogoutSuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: Logged out successfully

    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: "The given data was invalid."
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            email:
              - "The email field is required."
            password:
              - "The password field must be at least 8 characters."

    NotFound:
      type: object
      properties:
        message:
          type: string
          example: "Resource not found."

    # --- Generic Pagination Schema (for index endpoints) ---
    # This is a simplified representation. Laravel's pagination includes more fields.
    # Adjust if you need a more detailed pagination schema matching Laravel's response.
    PaginationInfo:
        type: object
        properties:
            current_page:
                type: integer
                example: 1
            from:
                type: integer
                nullable: true
                example: 1
            last_page:
                type: integer
                example: 5
            per_page:
                type: integer
                example: 15
            to:
                type: integer
                nullable: true
                example: 15
            total:
                type: integer
                example: 70
    PaginationLinks:
        type: object
        properties:
            first:
                type: string
                nullable: true
                example: "http://127.0.0.1:8000/api/products?page=1"
            last:
                type: string
                nullable: true
                example: "http://127.0.0.1:8000/api/products?page=5"
            prev:
                type: string
                nullable: true
                example: null # Or URL if not first page
            next:
                type: string
                nullable: true
                example: "http://127.0.0.1:8000/api/products?page=2"

    PaginatedResponse:
        type: object
        properties:
            data:
                type: array
                items: {} # Placeholder, to be replaced by specific item type in path
            links:
                $ref: '#/components/schemas/PaginationLinks'
            meta:
                $ref: '#/components/schemas/PaginationInfo'


    # --- Resource Schemas (Based on your Models and assumed Resources) ---
    # Add schemas for all your models that will be returned by the API

    ProductCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1 # Example from Seeder
        name:
          type: string
          example: Textiles # Example from Seeder
        description:
          type: string
          nullable: true
          example: صناعات نسيجية متنوعة # Example
        # parent_category_id and children relationship typically not included in basic resource

    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1 # Example from Seeder
        seller_user_id:
          type: integer
          description: ID of the user selling this product.
          example: 3 # Example Vendor ID from Seeder
        name:
          type: string
          example: وشاح حرير يدوي # Example from Seeder
        description:
          type: string
          example: وشاح مصنوع يدوياً من الحرير الطبيعي بتطريز دمشقي. # Example from Seeder
        color:
          type: string
          nullable: true
          example: أحمر # Example
        stock_quantity:
          type: integer
          example: 15 # Example from Seeder
        price:
          type: number
          format: float
          example: 5000.00 # Example from Seeder
        main_image_url:
          type: string
          nullable: true
          example: /images/scarf.jpg # Example path
        category_id:
          type: integer
          nullable: true
          example: 2 # Example Category ID (e.g., Embroidery)
        is_available:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:30:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:30:00.000000Z"
        # Relationships (seller, category, ratings, comments, favorites, etc.) can be included as nested objects/arrays if loaded by the resource
        category: # If ProductResource includes category relation
            $ref: '#/components/schemas/ProductCategory'
            nullable: true
        # ratings: # If ProductResource includes ratings relation
        #     type: array
        #     items:
        #         $ref: '#/components/schemas/Rating'
        # comments: # If ProductResource includes comments relation
        #     type: array
        #     items:
        #         $ref: '#/components/schemas/Comment'
        # favorites: # If ProductResource includes favorites relation (might be just a count or boolean)
        #     type: integer # Example: count of favorites
        #     example: 5


    SiteCategory:
      type: object
      properties:
        id:
          type: integer
          example: 1 # Example from Seeder
        name:
          type: string
          example: Historical # Example from Seeder
        description:
          type: string
          nullable: true
          example: Sites of historical significance.

    TouristSite:
      type: object
      properties:
        id:
          type: integer
          example: 1 # Example from Seeder
        name:
          type: string
          example: قلعة حلب # Example from Seeder
        description:
          type: string
          example: قلعة أثرية تاريخية في قلب مدينة حلب القديمة. # Example from Seeder
        location_text:
          type: string
          nullable: true
          example: حلب، سوريا # Example from Seeder
        latitude:
          type: number
          format: float
          nullable: true
          example: 36.2007 # Example from Seeder
        longitude:
          type: number
          format: float
          nullable: true
          example: 36.1629 # Example from Seeder
        city:
          type: string
          nullable: true
          example: حلب # Example from Seeder
        country:
          type: string
          example: Syria
        category_id:
          type: integer
          nullable: true
          example: 1 # Example Category ID (e.g., Historical)
        main_image_url:
          type: string
          nullable: true
          example: /images/aleppo_castle.jpg # Example path
        video_url:
          type: string
          nullable: true
          example: null # Example showing null is possible
        added_by_user_id:
          type: integer
          nullable: true
          description: ID of the user who added/manages this site.
          example: 1 # Example Admin ID
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:35:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:35:00.000000Z"
        # Relationships (category, activities, experiences, ratings, comments, favorites) can be included as nested objects/arrays if loaded
        category: # If TouristSiteResource includes category relation
            $ref: '#/components/schemas/SiteCategory'
            nullable: true
        # activities:
        #     type: array
        #     items:
        #         $ref: '#/components/schemas/TouristActivity'
        # experiences:
        #     type: array
        #     items:
        #         $ref: '#/components/schemas/SiteExperience'
        # ratings:
        #     type: array
        #     items:
        #         $ref: '#/components/schemas/Rating'
        # comments:
        #     type: array
        #     items:
        #         $ref: '#/components/schemas/Comment'
        # favorites:
        #     type: integer # Example: count of favorites
        #     example: 12

    TouristActivity:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: جولة في قلعة حلب
        description:
          type: string
          nullable: true
          example: جولة سياحية برفقة مرشد في أرجاء قلعة حلب.
        site_id:
          type: integer
          nullable: true
          example: 1 # Example Site ID (قلعة حلب)
        location_text:
          type: string
          nullable: true
          example: مدخل قلعة حلب
        start_datetime:
          type: string
          format: date-time
          example: "2025-06-01T10:00:00Z"
        duration_minutes:
          type: integer
          nullable: true
          example: 120 # 2 hours
        organizer_user_id:
          type: integer
          nullable: true
          example: 3 # Example Vendor ID
        price:
          type: number
          format: float
          nullable: true
          example: 50.00 # Example price
        max_participants:
          type: integer
          nullable: true
          example: 20
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:40:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:40:00.000000Z"
        # Relationships (site, organizer) can be included

    HotelRoomType:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Single Room # Example from schema notes
        description:
          type: string
          nullable: true
          example: غرفة لشخص واحد بسرير مفرد.

    Hotel:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: فندق الشيراتون دمشق
        star_rating:
          type: integer
          nullable: true
          example: 5
        description:
          type: string
          nullable: true
          example: فندق فاخر يقع في قلب دمشق.
        address_line1:
          type: string
          nullable: true
          example: طريق المطار
        city:
          type: string
          nullable: true
          example: دمشق
        country:
          type: string
          example: Syria
        latitude:
          type: number
          format: float
          nullable: true
          example: 33.5128
        longitude:
          type: number
          format: float
          nullable: true
          example: 36.2919
        contact_phone:
          type: string
          nullable: true
          example: "+963 11 2222222"
        contact_email:
          type: string
          nullable: true
          example: info@sheratondamascus.com
        main_image_url:
          type: string
          nullable: true
          example: /images/sheraton_damascus.jpg
        managed_by_user_id:
          type: integer
          nullable: true
          description: ID of the user managing this hotel (HotelBookingManager).
          example: 4 # Example HotelManager ID
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:45:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:45:00.000000Z"
        # Relationships (managedBy, rooms, ratings, comments, favorites) can be included
        rooms: # If HotelResource includes rooms relation
            type: array
            items:
                $ref: '#/components/schemas/HotelRoom'


    HotelRoom:
      type: object
      properties:
        id:
          type: integer
          example: 1
        hotel_id:
          type: integer
          example: 1 # Example Hotel ID
        room_type_id:
          type: integer
          example: 1 # Example RoomType ID (Single Room)
        room_number:
          type: string
          example: "101"
        price_per_night:
          type: number
          format: float
          example: 50000.00 # Example price
        area_sqm:
          type: number
          format: float
          nullable: true
          example: 25.50
        max_occupancy:
          type: integer
          nullable: true
          example: 1
        description:
          type: string
          nullable: true
          example: غرفة مفردة بإطلالة على المدينة.
        is_available_for_booking:
          type: boolean
          example: true
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:50:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:50:00.000000Z"
        # Relationships (hotel, type, bookings) can be included
        type: # If HotelRoomResource includes type relation
            $ref: '#/components/schemas/HotelRoomType'


    HotelBooking:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          description: ID of the user who made the booking.
          example: 2 # Example Tourist ID
        room_id:
          type: integer
          description: ID of the booked room.
          example: 1 # Example Room ID
        check_in_date:
          type: string
          format: date
          example: "2025-07-10"
        check_out_date:
          type: string
          format: date
          example: "2025-07-15"
        num_adults:
          type: integer
          example: 1
        num_children:
          type: integer
          example: 0
        total_amount:
          type: number
          format: float
          example: 250000.00 # Example: 5 nights * 50000
        booking_status:
          type: string
          enum:
            - PendingConfirmation
            - Confirmed
            - CancelledByUser
            - CancelledByHotel
            - Completed
            - NoShow
          example: Confirmed
        payment_status:
          type: string
          enum:
            - Unpaid
            - Paid
            - PaymentFailed
            - Refunded
          example: Paid
        payment_transaction_id:
          type: string
          nullable: true
          example: "txn_abc123xyz" # Example transaction ID
        booked_at:
          type: string
          format: date-time
          example: "2025-05-18T18:55:00.000000Z"
        special_requests:
          type: string
          nullable: true
          example: null
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T18:55:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T18:55:00.000000Z"
        # Relationships (user, room) can be included

    SiteExperience:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          description: ID of the user who wrote the experience.
          example: 2 # Example Tourist ID
        site_id:
          type: integer
          description: ID of the tourist site reviewed.
          example: 1 # Example Tourist Site ID (قلعة حلب)
        title:
          type: string
          nullable: true
          example: تجربتي الرائعة في قلعة حلب
        content:
          type: string
          example: زيارة ممتعة جداً، القلعة واسعة وتستحق الاستكشاف. المنظر من الأعلى مذهل.
        photo_url:
          type: string
          nullable: true
          example: /storage/experiences/exp_aleppo.jpg # Example path
        visit_date:
          type: string
          format: date
          nullable: true
          example: "2025-04-15"
        created_at:
          type: string
          format: date-time
          example: "2025-05-18T19:00:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-18T19:00:00.000000Z"
        # Relationships (user, site, comments, ratings, favorites) can be included

    Article:
      type: object
      properties:
        id:
          type: integer
          example: 1
        author_user_id:
          type: integer
          description: ID of the user who authored the article.
          example: 1 # Example Admin ID (assuming Admin can write articles)
        title:
          type: string
          example: أجمل الأماكن الطبيعية في ريف اللاذقية
        content:
          type: string
          example: <p>تزخر ريف اللاذقية بالعديد من الوجهات الطبيعية الخلابة...</p> # Example HTML content
        excerpt:
          type: string
          nullable: true
          example: اكتشف أجمل الشلالات والغابات في ريف اللاذقية.
        main_image_url:
          type: string
          nullable: true
          example: /images/latakia_nature.jpg # Example path
        video_url:
          type: string
          nullable: true
          example: null
        tags:
          type: string
          nullable: true
          example: سياحة,طبيعة,اللاذقية
        status:
          type: string
          enum:
            - Draft
            - Published
            - Archived
          example: Published
        published_at:
          type: string
          format: date-time
          nullable: true
          example: "2025-05-10T09:00:00.000000Z"
        created_at:
          type: string
          format: date-time
          example: "2025-05-08T14:00:00.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-05-10T09:00:00.000000Z"
        # Relationships (author, comments, ratings, favorites) can be included

    # Schemas for Polymorphic Targets (Favorite, Rating, Comment)
    # These will include the 'target' property. We use oneOf to indicate the target can be one of several types.
    Favorite:
        type: object
        properties:
            id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 2 # Example Tourist ID
            target_type:
              type: string
              enum:
                - TouristSite
                - Product
                - Article
                - Hotel
                - SiteExperience # Although SiteExperience is less common to favorite directly
              example: TouristSite
            target_id:
              type: integer
              example: 1 # Example Site ID
            added_at:
              type: string
              format: date-time
              example: "2025-05-18T19:10:00.000000Z"
            # The 'target' relationship data if loaded
            target:
              description: The actual favorited item object (depends on target_type).
              oneOf: # The target can be one of these types
                - $ref: '#/components/schemas/TouristSite'
                - $ref: '#/components/schemas/Product'
                - $ref: '#/components/schemas/Article'
                - $ref: '#/components/schemas/Hotel'
                # - $ref: '#/components/schemas/SiteExperience' # Include if you can favorite experiences

    Rating:
        type: object
        properties:
            id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 2 # Example Tourist ID
            target_type:
              type: string
              enum:
                - TouristSite
                - Product
                - Hotel
                - Article
                # - SiteExperience # Can you rate experiences? If so, add here.
              example: TouristSite
            target_id:
              type: integer
              example: 1 # Example Site ID
            rating_value:
              type: integer
              example: 5 # Example rating (1-5)
            review_title:
              type: string
              nullable: true
              example: زيارة تستحق التقييم الكامل
            review_text:
              type: string
              nullable: true
              example: القلعة مذهلة والتجربة فاقت التوقعات.
            created_at:
              type: string
              format: date-time
              example: "2025-05-18T19:15:00.000000Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-05-18T19:15:00.000000Z"
            # The 'target' relationship data if loaded
            target:
              description: The actual rated item object (depends on target_type).
              oneOf: # The target can be one of these types
                - $ref: '#/components/schemas/TouristSite'
                - $ref: '#/components/schemas/Product'
                - $ref: '#/components/schemas/Hotel'
                - $ref: '#/components/schemas/Article'
                # - $ref: '#/components/schemas/SiteExperience' # Include if you can rate experiences

    Comment:
        type: object
        properties:
            id:
              type: integer
              example: 1
            user_id:
              type: integer
              example: 2 # Example Tourist ID
            target_type:
              type: string
              enum:
                - Article
                - Product
                - TouristSite
                - Hotel
                - SiteExperience
              example: TouristSite
            target_id:
              type: integer
              example: 1 # Example Site ID
            parent_comment_id:
              type: integer
              nullable: true
              example: null # Or parent comment ID for replies
            content:
              type: string
              example: تعليق رائع! شكراً لمشاركة تجربتك.
            created_at:
              type: string
              format: date-time
              example: "2025-05-18T19:20:00.000000Z"
            updated_at:
              type: string
              format: date-time
              example: "2025-05-18T19:20:00.000000Z"
            # Relationships (user, target, parent, replies) can be included
            user: # Include user who commented
                $ref: '#/components/schemas/User'
            target: # The actual commented item object (depends on target_type)
                description: The item the comment is on.
                oneOf: # The target can be one of these types
                    - $ref: '#/components/schemas/Article'
                    - $ref: '#/components/schemas/Product'
                    - $ref: '#/components/schemas/TouristSite'
                    - $ref: '#/components/schemas/Hotel'
                    - $ref: '#/components/schemas/SiteExperience'
            parent: # Parent comment if this is a reply
                $ref: '#/components/schemas/Comment'
                nullable: true
            replies: # Replies to this comment (nested comments)
                type: array
                items:
                    $ref: '#/components/schemas/Comment'


    # --- Error Schemas ---
    ErrorResponse:
        type: object
        properties:
            message:
                type: string
                example: "An error occurred."

# Define the API Paths (Endpoints)
paths:

  # --- Authentication Paths ---
  /register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse' # Use AuthSuccessResponse for token
              example:
                user:
                  id: 5 # New user ID
                  username: newuser123
                  email: user@example.com
                  user_type: Tourist
                  is_active: true
                  created_at: "2025-05-18T20:00:00.000000Z"
                  updated_at: "2025-05-18T20:00:00.000000Z"
                  profile: # Example of non-null profile
                    first_name: أحمد
                    last_name: علي
                    father_name: محمد
                    mother_name: فاطمة
                    passport_image_url: null
                    bio: مستخدم جديد
                    profile_picture_url: null
                    updated_at: "2025-05-18T20:00:00.000000Z"
                token: "3|abcdefghijklmnopqrstuvwxyz1234567890" # Example new token
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /login:
    post:
      summary: Authenticate user and issue token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse' # Use AuthSuccessResponse for token
              example: # Use the example from your successful test
                user:
                  id: 1
                  username: admin
                  email: admin@app.com
                  user_type: Admin
                  is_active: true
                  created_at: "2025-05-18T18:18:03.000000Z"
                  updated_at: "2025-05-18T18:18:03.000000Z"
                  profile: # Provide a non-null example for the profile structure
                     first_name: المدير
                     last_name: المسؤول
                     father_name: null
                     mother_name: null
                     passport_image_url: null
                     bio: مدير النظام الرئيسي
                     profile_picture_url: null
                     updated_at: "2025-05-18T18:20:00.000000Z"
                token: "2|aWAjhLkUgC8TfDKbwBTCFoYBjpELPoYplwwnljCX6ae2b5bc"
        '401':
          description: Unauthorized (Invalid credentials)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError' # Validation error for failed auth attempt
              example:
                message: "The given data was invalid."
                errors:
                  login:
                    - "These credentials do not match our records." # Corresponds to 'auth.failed'

  # --- Protected Paths (require sanctumAuth) ---
  /logout:
    post:
      summary: Logout authenticated user and invalidate token
      tags:
        - Authentication
      security: # Requires authentication
        - sanctumAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutSuccessResponse'
              example:
                message: Logged out successfully
        '401':
          description: Unauthorized (No valid token)

  /user:
    get:
      summary: Get authenticated user details
      tags:
        - Authentication
      security: # Requires authentication
        - sanctumAuth: []
      responses:
        '200':
          description: Authenticated user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User' # Returns the User object
              example: # Example of authenticated user with profile
                id: 2 # Example Tourist User ID
                username: tourist1
                email: tourist1@app.com
                user_type: Tourist
                is_active: true
                created_at: "2025-05-18T18:18:03.000000Z"
                updated_at: "2025-05-18T18:18:03.000000Z"
                profile:
                  first_name: سارة
                  last_name: محمود
                  father_name: null
                  mother_name: null
                  passport_image_url: null
                  bio: أحب استكشاف المواقع التاريخية.
                  profile_picture_url: /storage/profiles/sara.jpg # Example URL
                  updated_at: "2025-05-18T18:25:00.000000Z"
        '401':
          description: Unauthorized (No valid token)


  # --- Public Paths (Browse Data) ---

  /tourist-sites:
    get:
      summary: List all tourist sites
      tags:
        - Tourist Sites
      parameters:
        - name: page # Example pagination parameter
          in: query
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination.
          example: 1
        - name: city # Example filtering parameter
          in: query
          schema:
            type: string
          description: Filter sites by city.
          example: حلب
        # Add other filter/sort parameters as needed (e.g., category_id, sort_by, sort_order)
      responses:
        '200':
          description: List of tourist sites (paginated)
          content:
            application/json:
              schema:
                 # Use the generic PaginatedResponse schema, and specify the items type
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/TouristSite'
              example: # Example of a paginated response
                  data:
                    - id: 1
                      name: قلعة حلب
                      description: قلعة أثرية تاريخية...
                      location_text: حلب، سوريا
                      latitude: 36.2007
                      longitude: 36.1629
                      city: حلب
                      country: Syria
                      category_id: 1
                      main_image_url: /images/aleppo_castle.jpg
                      video_url: null
                      added_by_user_id: 1
                      created_at: "2025-05-18T18:35:00.000000Z"
                      updated_at: "2025-05-18T18:35:00.000000Z"
                      category: # Example of included relationship data
                         id: 1
                         name: Historical
                         description: Sites of historical significance.
                    - id: 2
                      name: تدمر
                      description: مدينة أثرية سورية قديمة...
                      location_text: تدمر، سوريا
                      latitude: 34.5606
                      longitude: 38.2725
                      city: تدمر
                      country: Syria
                      category_id: 1
                      main_image_url: /images/palmyra.jpg
                      video_url: null
                      added_by_user_id: 1
                      created_at: "2025-05-18T18:35:00.000000Z"
                      updated_at: "2025-05-18T18:35:00.000000Z"
                      category:
                         id: 1
                         name: Historical
                         description: Sites of historical significance.
                  links:
                    first: "http://127.0.0.1:8000/api/tourist-sites?page=1"
                    last: "http://127.0.0.1:8000/api/tourist-sites?page=5"
                    prev: null
                    next: "http://127.0.0.1:8000/api/tourist-sites?page=2"
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 5
                    links: # More detailed pagination links from Laravel's meta
                      - url: "http://127.0.0.1:8000/api/tourist-sites?page=1"
                        label: "« Previous"
                        active: false
                      - url: "http://127.0.0.1:8000/api/tourist-sites?page=1"
                        label: "1"
                        active: true
                      - url: "http://127.0.0.1:8000/api/tourist-sites?page=2"
                        label: "2"
                        active: false
                      - url: "http://127.0.0.1:8000/api/tourist-sites?page=5"
                        label: "Next »"
                        active: false
                    path: "http://127.0.0.1:8000/api/tourist-sites"
                    per_page: 15
                    to: 15
                    total: 70


  /tourist-sites/{touristSite}: # Using Route Model Binding
    get:
      summary: Get details for a specific tourist site
      tags:
        - Tourist Sites
      parameters:
        - name: touristSite # Parameter name must match route segment
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tourist site to retrieve.
          example: 1 # Example ID from Seeder
      responses:
        '200':
          description: Tourist site details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TouristSite'
              example: # Example matching schema, potentially with loaded relations
                  id: 1
                  name: قلعة حلب
                  description: قلعة أثرية تاريخية...
                  location_text: حلب، سوريا
                  latitude: 36.2007
                  longitude: 36.1629
                  city: حلب
                  country: Syria
                  category_id: 1
                  main_image_url: /images/aleppo_castle.jpg
                  video_url: null
                  added_by_user_id: 1
                  created_at: "2025-05-18T18:35:00.000000Z"
                  updated_at: "2025-05-18T18:35:00.000000Z"
                  category: # Example of included relationship data
                     id: 1
                     name: Historical
                     description: Sites of historical significance.
                  activities: # Example of included activities
                     type: array
                     items:
                        $ref: '#/components/schemas/TouristActivity'
                     example:
                       - id: 1
                         name: جولة في قلعة حلب
                         description: جولة سياحية برفقة مرشد...
                         site_id: 1
                         location_text: مدخل قلعة حلب
                         start_datetime: "2025-06-01T10:00:00Z"
                         duration_minutes: 120
                         organizer_user_id: 3
                         price: 50.00
                         max_participants: 20
                         created_at: "2025-05-18T18:40:00.000000Z"
                         updated_at: "2025-05-18T18:40:00.000000Z"
                  ratings: # Example of included ratings (for this site)
                    type: array
                    items:
                       $ref: '#/components/schemas/Rating'
                    example:
                      - id: 1
                        user_id: 2
                        target_type: TouristSite
                        target_id: 1
                        rating_value: 5
                        review_title: زيارة رائعة
                        review_text: المكان جميل جداً.
                        created_at: "2025-05-20T10:00:00.000000Z"
                        updated_at: "2025-05-20T10:00:00.000000Z"
                        user: # Example of nested user data in rating
                            id: 2
                            username: tourist1
                            email: tourist1@app.com
                            user_type: Tourist
                            is_active: true
                            created_at: "2025-05-18T18:18:03.000000Z"
                            updated_at: "2025-05-18T18:18:03.000000Z"
                            profile: # Example nested profile in user
                                first_name: سارة
                                last_name: محمود
                                father_name: null
                                mother_name: null
                                passport_image_url: null
                                bio: أحب استكشاف المواقع التاريخية.
                                profile_picture_url: /storage/profiles/sara.jpg
                                updated_at: "2025-05-18T18:25:00.000000Z"
                  comments: # Example of included comments (for this site)
                    type: array
                    items:
                       $ref: '#/components/schemas/Comment'
                    example:
                      - id: 1
                        user_id: 2
                        target_type: TouristSite
                        target_id: 1
                        parent_comment_id: null
                        content: تعليق جميل جداً على القلعة!
                        created_at: "2025-05-21T11:00:00.000000Z"
                        updated_at: "2025-05-21T11:00:00.000000Z"
                        user: # Example of nested user data in comment
                            id: 2
                            username: tourist1
                            email: tourist1@app.com
                            user_type: Tourist
                            is_active: true
                            created_at: "2025-05-18T18:18:03.000000Z"
                            updated_at: "2025-05-18T18:18:03.000000Z"
                            profile:
                                first_name: سارة
                                last_name: محمود
                                father_name: null
                                mother_name: null
                                passport_image_url: null
                                bio: أحب استكشاف المواقع التاريخية.
                                profile_picture_url: /storage/profiles/sara.jpg
                                updated_at: "2025-05-18T18:25:00.000000Z"
                  favorites_count: # Example - if you return a count
                      type: integer
                      example: 15
        '404':
          description: Site not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /site-categories:
    get:
      summary: List all tourist site categories
      tags:
        - Tourist Sites
        - Categories
      responses:
        '200':
          description: List of site categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SiteCategory'
              example:
                - id: 1
                  name: Historical
                  description: Sites of historical significance.
                - id: 2
                  name: Natural
                  description: Natural landscapes and attractions.
                - id: 3
                  name: Cultural
                  description: Museums, theaters, cultural centers.

  # --- Add paths for TouristActivities, Hotels, Products, Articles (similar pattern to TouristSites) ---

  /tourist-activities:
    get:
      summary: List all tourist activities
      tags:
        - Tourist Activities
      parameters:
        # Add pagination, filtering (e.g., by site_id, city, date range)
        - name: site_id
          in: query
          schema:
            type: integer
            nullable: true
          description: Filter activities by a specific tourist site ID.
          example: 1
        - name: date_from
          in: query
          schema:
            type: string
            format: date
            nullable: true
          description: Filter activities starting on or after this date.
          example: 2025-06-01
      responses:
        '200':
          description: List of tourist activities (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/TouristActivity'
              example: # Example of paginated activities
                 data:
                   - id: 1
                     name: جولة في قلعة حلب
                     description: جولة سياحية برفقة مرشد...
                     site_id: 1
                     location_text: مدخل قلعة حلب
                     start_datetime: "2025-06-01T10:00:00Z"
                     duration_minutes: 120
                     organizer_user_id: 3
                     price: 50.00
                     max_participants: 20
                     created_at: "2025-05-18T18:40:00.000000Z"
                     updated_at: "2025-05-18T18:40:00.000000Z"
                   - id: 2
                     name: ورشة عمل فخار
                     description: ورشة لتعلم أساسيات صناعة الفخار.
                     site_id: null # Activity not tied to a specific site
                     location_text: دمشق، منطقة الصناعات اليدوية
                     start_datetime: "2025-06-05T14:00:00Z"
                     duration_minutes: 90
                     organizer_user_id: 3
                     price: 150.00
                     max_participants: 10
                     created_at: "2025-05-18T18:40:00.000000Z"
                     updated_at: "2025-05-18T18:40:00.000000Z"
                 links: {} # Pagination links example
                 meta: {} # Pagination meta example


  /tourist-activities/{touristActivity}:
    get:
      summary: Get details for a specific tourist activity
      tags:
        - Tourist Activities
      parameters:
        - name: touristActivity
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tourist activity to retrieve.
          example: 1
      responses:
        '200':
          description: Tourist activity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TouristActivity'
              example:
                 id: 1
                 name: جولة في قلعة حلب
                 description: جولة سياحية برفقة مرشد...
                 site_id: 1
                 location_text: مدخل قلعة حلب
                 start_datetime: "2025-06-01T10:00:00Z"
                 duration_minutes: 120
                 organizer_user_id: 3
                 price: 50.00
                 max_participants: 20
                 created_at: "2025-05-18T18:40:00.000000Z"
                 updated_at: "2025-05-18T18:40:00.000000Z"
                 site: # Example included site relation
                     id: 1
                     name: قلعة حلب
                     # ... other site details (abbreviated for example)
                 organizer: # Example included organizer relation
                     id: 3
                     username: vendor1
                     user_type: Vendor
                     # ... other user details (abbreviated for example)
        '404':
          description: Activity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  # ... Add paths for Hotels, Products, Articles, ProductCategories, SiteCategories (index and show)
  # using similar patterns, referencing their respective schemas and including examples.
  # Remember to include nested relationships in examples where they are loaded by your Resources.

  /hotels:
    get:
      summary: List all hotels
      tags: [ Hotels ]
      parameters: [] # Add pagination/filtering/sorting params
      responses:
        '200':
          description: List of hotels (paginated)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Hotel'
              example:
                data:
                   - id: 1
                     name: فندق الشيراتون دمشق
                     star_rating: 5
                     description: فندق فاخر...
                     city: دمشق
                     # ... other hotel fields
                     rooms: # Example included rooms
                        type: array
                        items:
                           $ref: '#/components/schemas/HotelRoom'
                        example:
                          - id: 1
                            hotel_id: 1
                            room_type_id: 1
                            room_number: "101"
                            price_per_night: 50000.00
                            area_sqm: 25.50
                            max_occupancy: 1
                            description: غرفة مفردة بإطلالة على المدينة.
                            is_available_for_booking: true
                            created_at: "2025-05-18T18:50:00.000000Z"
                            updated_at: "2025-05-18T18:50:00.000000Z"
                            type: # Included room type
                               id: 1
                               name: Single Room
                               description: غرفة لشخص واحد...
                links: {}
                meta: {}

  /hotels/{hotel}:
    get:
      summary: Get details for a specific hotel
      tags: [ Hotels ]
      parameters:
        - name: hotel
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Hotel details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
              example:
                 id: 1
                 name: فندق الشيراتون دمشق
                 star_rating: 5
                 description: فندق فاخر...
                 city: دمشق
                 country: Syria
                 latitude: 33.5128
                 longitude: 36.2919
                 contact_phone: "+963 11 2222222"
                 contact_email: info@sheratondamascus.com
                 main_image_url: /images/sheraton_damascus.jpg
                 managed_by_user_id: 4
                 created_at: "2025-05-18T18:45:00.000000Z"
                 updated_at: "2025-05-18T18:45:00.000000Z"
                 rooms: # Example included rooms
                    type: array
                    items:
                       $ref: '#/components/schemas/HotelRoom'
                    example:
                      - id: 1
                        hotel_id: 1
                        room_type_id: 1
                        room_number: "101"
                        price_per_night: 50000.00
                        area_sqm: 25.50
                        max_occupancy: 1
                        description: غرفة مفردة بإطلالة على المدينة.
                        is_available_for_booking: true
                        created_at: "2025-05-18T18:50:00.000000Z"
                        updated_at: "2025-05-18T18:50:00.000000Z"
                        type: # Included room type
                           id: 1
                           name: Single Room
                           description: غرفة لشخص واحد...
                      - id: 2
                        hotel_id: 1
                        room_type_id: 2
                        room_number: "205"
                        price_per_night: 80000.00
                        area_sqm: 40.00
                        max_occupancy: 2
                        description: غرفة مزدوجة واسعة.
                        is_available_for_booking: true
                        created_at: "2025-05-18T18:51:00.000000Z"
                        updated_at: "2025-05-18T18:51:00.000000Z"
                        type:
                           id: 2
                           name: Double Room
                           description: غرفة لشخصين...
                 # ratings/comments/favorites examples if loaded

        '404':
          description: Hotel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /products:
    get:
      summary: List all products (crafts)
      tags: [ Products ]
      parameters: [] # Add pagination/filtering/sorting params
      responses:
        '200':
          description: List of products (paginated)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
              example:
                data:
                  - id: 1
                    seller_user_id: 3
                    name: وشاح حرير يدوي
                    description: وشاح مصنوع يدوياً...
                    color: null
                    stock_quantity: 15
                    price: 5000.00
                    main_image_url: /images/scarf.jpg
                    category_id: 2
                    is_available: true
                    created_at: "2025-05-18T18:30:00.000000Z"
                    updated_at: "2025-05-18T18:30:00.000000Z"
                    category: # Example included category
                       id: 2
                       name: Embroidery
                       description: null
                  - id: 2
                    seller_user_id: 3
                    name: صحن فخاري مزجج
                    description: صحن فخاري تقليدي...
                    color: null
                    stock_quantity: 8
                    price: 1200.00
                    main_image_url: /images/pottery_plate.jpg
                    category_id: 3
                    is_available: true
                    created_at: "2025-05-18T18:31:00.000000Z"
                    updated_at: "2025-05-18T18:31:00.000000Z"
                    category: # Example included category
                       id: 3
                       name: Ceramic Art
                       description: null
                links: {}
                meta: {}

  /products/{product}:
    get:
      summary: Get details for a specific product
      tags: [ Products ]
      parameters:
        - name: product
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                 id: 1
                 seller_user_id: 3
                 name: وشاح حرير يدوي
                 description: وشاح مصنوع يدوياً من الحرير الطبيعي بتطريز دمشقي.
                 color: null
                 stock_quantity: 15
                 price: 5000.00
                 main_image_url: /images/scarf.jpg
                 category_id: 2
                 is_available: true
                 created_at: "2025-05-18T18:30:00.000000Z"
                 updated_at: "2025-05-18T18:30:00.000000Z"
                 category: # Example included category
                    id: 2
                    name: Embroidery
                    description: null
                 seller: # Example included seller user
                     id: 3
                     username: vendor1
                     email: vendor1@app.com
                     user_type: Vendor
                     is_active: true
                     created_at: "2025-05-18T18:18:03.000000Z"
                     updated_at: "2025-05-18T18:18:03.000000Z"
                     profile: # Example included profile
                         first_name: رنا
                         last_name: ديب
                         father_name: null
                         mother_name: null
                         passport_image_url: null
                         bio: حرفية في التطريز اليدوي.
                         profile_picture_url: null
                         updated_at: "2025-05-18T18:26:00.000000Z"
                 # ratings/comments/favorites examples if loaded

        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'

  /product-categories:
    get:
      summary: List all product categories
      tags:
        - Products
        - Categories
      responses:
        '200':
          description: List of product categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
              example:
                - id: 1
                  name: Textiles
                  description: null
                - id: 2
                  name: Pottery
                  description: null
                - id: 3
                  name: Jewelry
                  description: null
                - id: 4
                  name: Woodwork
                  description: null
                - id: 5
                  name: Embroidery
                  description: null
                  parent_category_id: 1
                - id: 6
                  name: Carpets
                  description: null
                  parent_category_id: 1


  /articles:
    get:
      summary: List all published articles (blog posts)
      tags: [ Articles ]
      parameters: [] # Add pagination/filtering/sorting params
      responses:
        '200':
          description: List of articles (paginated)
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Article'
              example:
                data:
                  - id: 1
                    author_user_id: 1
                    title: أجمل الأماكن في سوريا
                    content: سوريا غنية بالمواقع السياحية الرائعة...
                    excerpt: سوريا غنية بالمواقع السياحية الرائعة...
                    main_image_url: /images/syria_beauty.jpg
                    video_url: null
                    tags: سياحة,طبيعة,تاريخ
                    status: Published
                    published_at: "2025-05-10T09:00:00Z"
                    created_at: "2025-05-08T14:00:00Z"
                    updated_at: "2025-05-10T09:00:00Z"
                    author: # Example included author
                       id: 1
                       username: admin
                       # ... other author details (abbreviated)
                links: {}
                meta: {}

  /articles/{article}:
    get:
      summary: Get details for a specific article
      tags: [ Articles ]
      parameters:
        - name: article
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
              example:
                 id: 1
                 author_user_id: 1
                 title: أجمل الأماكن في سوريا
                 content: سوريا غنية بالمواقع السياحية الرائعة...
                 excerpt: سوريا غنية بالمواقع السياحية الرائعة...
                 main_image_url: /images/syria_beauty.jpg
                 video_url: null
                 tags: سياحة,طبيعة,تاريخ
                 status: Published
                 published_at: "2025-05-10T09:00:00Z"
                 created_at: "2025-05-08T14:00:00Z"
                 updated_at: "2025-05-10T09:00:00Z"
                 author: # Example included author
                    id: 1
                    username: admin
                    email: admin@app.com
                    user_type: Admin
                    is_active: true
                    created_at: "2025-05-18T18:18:03.000000Z"
                    updated_at: "2025-05-18T18:18:03.000000Z"
                    profile: # Example included profile
                       first_name: المدير
                       last_name: المسؤول
                       father_name: null
                       mother_name: null
                       passport_image_url: null
                       bio: مدير النظام الرئيسي
                       profile_picture_url: null
                       updated_at: "2025-05-18T18:20:00.000000Z"
                 # comments/ratings/favorites examples if loaded

        '404':
          description: Article not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'


  # --- Protected Paths (require sanctumAuth) ---

  # /profile (already under protected group)
  /profile:
    get:
      summary: Get authenticated user's profile
      tags: [ User Profile ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: User and profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User' # User object with profile included
              example: # Example authenticated user with profile
                 id: 2
                 username: tourist1
                 email: tourist1@app.com
                 user_type: Tourist
                 is_active: true
                 created_at: "2025-05-18T18:18:03.000000Z"
                 updated_at: "2025-05-18T18:18:03.000000Z"
                 profile: # Example of non-null profile
                     first_name: سارة
                     last_name: محمود
                     father_name: null
                     mother_name: null
                     passport_image_url: null
                     bio: أحب استكشاف المواقع التاريخية.
                     profile_picture_url: /storage/profiles/sara.jpg # Example URL
                     updated_at: "2025-05-18T18:25:00.000000Z"
        '401':
          description: Unauthorized (No valid token)
    put:
      summary: Update authenticated user's profile
      tags: [ User Profile ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema: # Define schema for profile update request (similar to UserProfile but maybe partial)
               type: object
               properties:
                 first_name:
                   type: string
                   maxLength: 100
                   example: سارة المعدلة
                 last_name:
                   type: string
                   maxLength: 100
                   example: محمود
                 father_name:
                   type: string
                   maxLength: 100
                   nullable: true
                   example: أحمد
                 mother_name:
                   type: string
                   maxLength: 100
                   nullable: true
                   example: فاطمة
                 bio:
                   type: string
                   nullable: true
                   example: أهتم بالسفر والتصوير.
                 # Add other fields like profile_picture_url (might need separate endpoint for file upload)
      responses:
        '200':
          description: Profile updated successfully
          content:
             application/json:
              schema:
                $ref: '#/components/schemas/User' # Return updated user/profile
              example: # Example authenticated user with updated profile
                 id: 2
                 username: tourist1
                 email: tourist1@app.com
                 user_type: Tourist
                 is_active: true
                 created_at: "2025-05-18T18:18:03.000000Z"
                 updated_at: "2025-05-18T18:18:03.000000Z"
                 profile: # Example of updated profile
                     first_name: سارة المعدلة
                     last_name: محمود
                     father_name: أحمد
                     mother_name: فاطمة
                     passport_image_url: null
                     bio: أهتم بالسفر والتصوير.
                     profile_picture_url: /storage/profiles/sara.jpg
                     updated_at: "2025-05-18T19:30:00.000000Z" # Updated timestamp
        '401':
          description: Unauthorized (No valid token)
        '422':
          description: Validation Error


  # --- Add Protected Paths for Shopping Cart, Orders, Bookings, Favorites, Ratings, Comments ---
  # Define endpoints for CRUD/actions on these resources, applying sanctumAuth security

  /cart:
    get:
      summary: Get authenticated user's shopping cart items
      tags: [ Shopping Cart ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: List of cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShoppingCartItem' # Need ShoppingCartItem Schema
              example: [] # Provide example data here...
    # Add POST /cart/add, PUT /cart/{cartItem}, DELETE /cart/{cartItem} endpoints...

  /my-orders:
    get:
      summary: Get authenticated user's product orders
      tags: [ Product Orders ]
      security: [ sanctumAuth: [] ]
      responses:
        '200':
          description: List of product orders (paginated)
          content:
            application/json:
              schema:
                 allOf:
                   - $ref: '#/components/schemas/PaginatedResponse'
                   - type: object
                     properties:
                       data:
                         type: array
                         items:
                           $ref: '#/components/schemas/ProductOrder' # Need ProductOrder Schema
              example: {} # Provide example data here...

  /my-orders/{productOrder}:
    get:
      summary: Get details of a specific product order for the authenticated user
      tags: [ Product Orders ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: productOrder
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product order details
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/ProductOrder'
              example: {} # Provide example data here...
        '404':
           description: Order not found or does not belong to user

  # ... similar paths for /my-bookings, /my-bookings/{hotelBooking}, /my-experiences (apiResource), /favorites/toggle, /my-favorites, ratings (store/update/destroy), comments (store/update/destroy), etc.
  # Remember to define the corresponding schemas for ShoppingCartItem, ProductOrder, ProductOrderItem, HotelBooking, Favorite, Rating, Comment
  # and include their examples with populated related data (user, product, site, etc.)
  # Also add endpoints like /tourist-sites/{site}/ratings to fetch ratings *for* a target.


# Example of a protected endpoint with parameter and request body (e.g., Add/Update Rating)
# /ratings/{rating?} -> rating is optional for POST (create), required for PUT/DELETE (update/delete)
  /ratings: # POST to create
    post:
      summary: Create a new rating
      tags: [ Ratings ]
      security: [ sanctumAuth: [] ]
      requestBody:
        required: true
        content:
          application/json:
            schema: # Schema for rating creation request
              type: object
              required:
                - target_type
                - target_id
                - rating_value
              properties:
                target_type:
                  type: string
                  enum: [ TouristSite, Product, Hotel, Article ]
                  example: TouristSite
                target_id:
                  type: integer
                  example: 1 # ID of the site
                rating_value:
                  type: integer
                  example: 4 # Rating value (e.g., 1-5)
                review_title:
                  type: string
                  nullable: true
                  example: مكان جميل
                review_text:
                  type: string
                  nullable: true
                  example: استمتعت كثيراً بزيارة هذا المكان.
      responses:
        '201':
          description: Rating created successfully
          content:
             application/json:
                schema:
                   $ref: '#/components/schemas/Rating'
                example: # Example of created rating
                   id: 5
                   user_id: 2
                   target_type: TouristSite
                   target_id: 1
                   rating_value: 4
                   review_title: مكان جميل
                   review_text: استمتعت كثيراً بزيارة هذا المكان.
                   created_at: "2025-05-18T19:35:00.000000Z"
                   updated_at: "2025-05-18T19:35:00.000000Z"
                   user: # Example included user
                       id: 2
                       username: tourist1
                       # ... user details ...
                   target: # Example included target (TouristSite)
                       id: 1
                       name: قلعة حلب
                       # ... site details ...
        '401':
          description: Unauthorized
        '422':
          description: Validation Error

  /ratings/{rating}: # PUT/DELETE to update/delete a specific rating
    put:
      summary: Update an existing rating
      tags: [ Ratings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: rating
          in: path
          required: true
          schema: { type: integer }
          description: ID of the rating to update.
          example: 5
      requestBody:
        required: true
        content:
          application/json:
            schema: # Schema for rating update request (subset of creation)
              type: object
              properties:
                rating_value:
                  type: integer
                  example: 5 # Updated value
                review_title:
                  type: string
                  nullable: true
                  example: تجربة فاقت التوقعات
                review_text:
                  type: string
                  nullable: true
                  example: لقد كانت الزيارة رائعة جداً!
      responses:
        '200':
          description: Rating updated successfully
          content:
             application/json:
                schema:
                   $ref: '#/components/schemas/Rating'
                example: # Example of updated rating
                   id: 5
                   user_id: 2
                   target_type: TouristSite
                   target_id: 1
                   rating_value: 5 # Updated
                   review_title: تجربة فاقت التوقعات # Updated
                   review_text: لقد كانت الزيارة رائعة جداً! # Updated
                   created_at: "2025-05-18T19:35:00.000000Z" # Original creation
                   updated_at: "2025-05-18T19:38:00.000000Z" # Updated timestamp
                   user: # Example included user
                       id: 2
                       username: tourist1
                       # ... user details ...
                   target: # Example included target (TouristSite)
                       id: 1
                       name: قلعة حلب
                       # ... site details ...
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (User does not own this rating)
        '404':
          description: Rating not found
        '422':
          description: Validation Error
    delete:
      summary: Delete an existing rating
      tags: [ Ratings ]
      security: [ sanctumAuth: [] ]
      parameters:
        - name: rating
          in: path
          required: true
          schema: { type: integer }
          description: ID of the rating to delete.
          example: 5
      responses:
        '204':
          description: Rating deleted successfully (No Content)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (User does not own this rating)
        '404':
          description: Rating not found

  # ... similar paths for Comments (POST /comments, PUT/DELETE /comments/{comment})
  # Add GET paths for comments/ratings *for* a specific target (e.g., GET /products/{product}/comments)

  /products/{product}/comments:
    get:
      summary: Get comments for a specific product
      tags: [ Products, Comments ] # Can be in multiple tags
      parameters:
        - name: product
          in: path
          required: true
          schema: { type: integer }
          description: ID of the product.
          example: 1
        # Add pagination/sorting params if needed
      responses:
        '200':
          description: List of comments for the product (possibly nested/threaded)
          content:
            application/json:
              schema:
                 type: array # Or PaginatedResponse if paginated
                 items:
                   $ref: '#/components/schemas/Comment'
              example:
                - id: 10
                  user_id: 2
                  target_type: Product
                  target_id: 1
                  parent_comment_id: null
                  content: منتج رائع جداً، الجودة ممتازة!
                  created_at: "2025-05-22T10:00:00.000000Z"
                  updated_at: "2025-05-22T10:00:00.000000Z"
                  user: # Included user
                      id: 2
                      username: tourist1
                      # ... user details ...
                  target: # Included target (Product - can be abbreviated)
                      id: 1
                      name: وشاح حرير يدوي
                      # ... product details ...
                  replies: # Example of nested reply
                     type: array
                     items:
                         $ref: '#/components/schemas/Comment'
                     example:
                         - id: 11
                           user_id: 3 # Example Vendor user replying
                           target_type: Product
                           target_id: 1
                           parent_comment_id: 10
                           content: شكراً لتقييمك! يسعدنا أن المنتج نال إعجابك.
                           created_at: "2025-05-22T11:00:00.000000Z"
                           updated_at: "2025-05-22T11:00:00.000000Z"
                           user: # Included user (the vendor)
                               id: 3
                               username: vendor1
                               # ... user details ...
                           target: # Included target (Product - can be abbreviated)
                               id: 1
                               name: وشاح حرير يدوي
                               # ... product details ...
                           replies: [] # Replies array can be empty
        '404':
          description: Product not found